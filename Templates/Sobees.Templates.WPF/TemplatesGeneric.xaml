<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <FontFamily x:Key="FontFamilyGeneric">Arial</FontFamily>
  <Thickness x:Key="MarginService">0,0,1.5,1.5</Thickness>
  <System:Double x:Key="DoubleColumnLeftWidth">36</System:Double>
  <System:Double x:Key="DoubleColumnLeftHeight">34</System:Double>
  <Style x:Key="ContentControlStyleWindowTitle"
         TargetType="{x:Type ContentControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <StackPanel Orientation="Horizontal">
            <Rectangle x:Name="HeaderLogo"
                       Fill="{DynamicResource ibLogoSobees}"
                       Height="18"
                       Width="18" />
            <ContentPresenter HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              RecognizesAccessKey="True"
                              Margin="0,0,0,1" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground"
            Value="Black" />
    <Setter Property="FontSize"
            Value="13.333" />
    <Setter Property="FontFamily"
            Value="Segoe UI" />
    <Setter Property="Content"
            Value="sobees" />
    <Setter Property="Margin"
            Value="0,-25,0,0" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
    <Setter Property="VerticalAlignment"
            Value="Top" />
  </Style>
  <Style TargetType="ListBoxItem">
    <Setter Property="HorizontalContentAlignment"
            Value="Left" />
    <Setter Property="VerticalContentAlignment"
            Value="Top" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Padding"
            Value="3,8" />
    <Setter Property="Margin"
            Value="0,0,0,0" />
    <Setter Property="OverridesDefaultStyle"
            Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <ControlTemplate.Resources>
            <Storyboard x:Key="itemSelected" />
            <Storyboard x:Key="itemNoSelected" />
          </ControlTemplate.Resources>
          <Grid Background="{TemplateBinding Background}"
                d:DesignHeight="63.5">
            <Border x:Name="bg"
                    Background="{DynamicResource Level2ItemBg}"
                    BorderThickness="0,1"
                    SnapsToDevicePixels="True"
                    BorderBrush="{DynamicResource Level2ItemBorder}" />
            <Border x:Name="bgOver"
                    Background="{DynamicResource Level2ItemBgOver}"
                    Opacity="0"
                    BorderBrush="{DynamicResource Level2ItemBorderOver}"
                    SnapsToDevicePixels="True"
                    BorderThickness="0,1" />
            <Border x:Name="bgSelected"
                    Background="{DynamicResource Level2ItemBgSelected}"
                    Opacity="0"
                    BorderThickness="0,1"
                    BorderBrush="{DynamicResource Level2itemBorderSelected}"
                    SnapsToDevicePixels="True" />
            <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Margin="{TemplateBinding Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Opacity"
                      TargetName="bgOver"
                      Value="0.26" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
              <Setter Property="Opacity"
                      TargetName="bgSelected"
                      Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="MinHeight"
            Value="0" />

  </Style>
  <DataTemplate x:Key="DataTemplateRetweetTwitter">

    <DockPanel LastChildFill="False"
               d:DesignWidth="237.093">
      <ContentControl Style="{StaticResource ContentControlStyleAvatar}"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top" />
      <TextBlock x:Name="title"
                 Margin="5,-2,0,0"
                 Text="Everani"
                 TextWrapping="Wrap"
                 DockPanel.Dock="Top"
                 FontSize="14"
                 HorizontalAlignment="Left" />
      <TextBlock x:Name="content"
                 Margin="5,0,0,0"
                 Text="&quot;SNAPPED&quot; watch it.....don't take notes though, ppl may become suspicious... "
                 TextWrapping="Wrap"
                 DockPanel.Dock="Top" />
      <TextBlock x:Name="date"
                 Margin="5,0,0,0"
                 Text="3 hours ago"
                 TextWrapping="Wrap"
                 DockPanel.Dock="Top"
                 FontSize="10"
                 Foreground="#FF4587E6" />
    </DockPanel>
  </DataTemplate>
  <Style x:Key="GridSplitterStyleDeckVertical"
         TargetType="{x:Type GridSplitter}">
    <Setter Property="Background"
            Value="#FFFF0000" />
    <Setter Property="IsTabStop"
            Value="true" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />

    <Setter Property="PreviewStyle">
      <Setter.Value>
        <Style TargetType="{x:Type Control}">
          <Setter Property="Background"
                  Value="#FF868686" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Control}">
                <Grid x:Name="Root"
                      Opacity=".5">
                  <Rectangle Fill="{TemplateBinding Background}" />
                  <Grid x:Name="HorizontalTemplate"
                        Height="6" />
                  <Grid x:Name="VerticalTemplate"
                        Width="6"
                        Visibility="Collapsed" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Grid x:Name="Root"
                IsHitTestVisible="{TemplateBinding IsEnabled}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0"
                                     Storyboard.TargetName="Root"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0"
                                     Storyboard.TargetName="FocusVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{TemplateBinding Background}"
                       StrokeThickness="0"
                       Panel.ZIndex="1000" />
            <Grid x:Name="HorizontalTemplate"
                  Height="10">
              <StackPanel Height="6"
                          VerticalAlignment="Center">
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="1"
                           Margin="1"
                           Width="10" />
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="1"
                           Margin="1"
                           Width="10" />
              </StackPanel>
            </Grid>
            <Grid x:Name="VerticalTemplate"
                  Width="10"
                  Visibility="Collapsed">
              <StackPanel VerticalAlignment="Center"
                          Width="6"
                          Orientation="Horizontal">
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="10"
                           Margin="1"
                           Width="1" />
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="10"
                           Margin="1"
                           Width="1" />
              </StackPanel>
            </Grid>
            <Rectangle x:Name="FocusVisual"
                       Stroke="#FF6DBDD1"
                       StrokeThickness="1"
                       IsHitTestVisible="false"
                       Opacity="0"
                       Panel.ZIndex="1000" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Opacity"
            Value="0" />
    <Setter Property="Width"
            Value="5" />
    <Setter Property="Margin"
            Value="0,0,-3,0" />
  </Style>
  <Style x:Key="GridSplitterStyleDeckHorizontal"
         TargetType="{x:Type GridSplitter}">
    <Setter Property="Background"
            Value="#FFFFFFFF" />
    <Setter Property="IsTabStop"
            Value="true" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
    <Setter Property="PreviewStyle">
      <Setter.Value>
        <Style TargetType="{x:Type Control}">
          <Setter Property="Background"
                  Value="#FF868686" />
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Control}">
                <Grid x:Name="Root"
                      Opacity=".5">
                  <Rectangle Fill="{TemplateBinding Background}" />
                  <Grid x:Name="HorizontalTemplate"
                        Height="6" />
                  <Grid x:Name="VerticalTemplate"
                        Width="6"
                        Visibility="Collapsed" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Grid x:Name="Root"
                IsHitTestVisible="{TemplateBinding IsEnabled}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0"
                                     Storyboard.TargetName="Root"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Unfocused" />
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0"
                                     Storyboard.TargetName="FocusVisual"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="{TemplateBinding Background}"
                       StrokeThickness="0" />
            <Grid x:Name="HorizontalTemplate"
                  Height="10">
              <StackPanel Height="6"
                          VerticalAlignment="Center">
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="1"
                           Margin="1"
                           Width="10" />
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="1"
                           Margin="1"
                           Width="10" />
              </StackPanel>
            </Grid>
            <Grid x:Name="VerticalTemplate"
                  Width="10"
                  Visibility="Collapsed">
              <StackPanel VerticalAlignment="Center"
                          Width="6"
                          Orientation="Horizontal">
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="10"
                           Margin="1"
                           Width="1" />
                <Rectangle Fill="#FF868686"
                           StrokeThickness="0"
                           Height="10"
                           Margin="1"
                           Width="1" />
              </StackPanel>
            </Grid>
            <Rectangle x:Name="FocusVisual"
                       Stroke="#FF6DBDD1"
                       StrokeThickness="1"
                       IsHitTestVisible="false"
                       Opacity="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Opacity"
            Value="0" />
    <Setter Property="Height"
            Value="5" />
    <Setter Property="Cursor"
            Value="SizeNS" />
  </Style>
  <Style TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="borderOver"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="contentPresenter"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="borderDisable"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="textBlock"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="0.3" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--<Border x:Name="border"
							BorderThickness="0,0,1,1"
							CornerRadius="3,3,3,3"
							Background="{DynamicResource BrushBtnDefaultBg}"
							BorderBrush="{DynamicResource BrushBtnDefaultBorder}" />
						<Border x:Name="borderOver"
							BorderThickness="0,0,1,1"
							CornerRadius="3,3,3,3"
							Background="{DynamicResource BrushBtnDefaultBgOver}"
							BorderBrush="{DynamicResource BrushBtnDefaultBorderOver}"
							Opacity="0" />-->
            <Border x:Name="border"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    BorderBrush="{DynamicResource ToggleLevel2Border1}"
                    Background="{DynamicResource ToggleLevel2Bg}">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Border x:Name="borderOver"
                    BorderThickness="1"
                    CornerRadius="3,3,3,3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2BorderOver}"
                    Background="{DynamicResource ToggleLevel2BgOver}" />
            <Border x:Name="borderChecked"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2Border1Checked}"
                    Background="{DynamicResource ToggleLevel2BgChecked}">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2Checked}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Border x:Name="borderDisable"
                    BorderThickness="1"
                    CornerRadius="3,3,3,3"
                    Background="{DynamicResource BrushBtnDefaultBgDisable}"
                    BorderBrush="{DynamicResource BrushBtnDefaultBorderDisable}"
                    Opacity="0" />
            <TextBlock x:Name="textBlock"
                       HorizontalAlignment="Center"
                       Margin="0,2,0,0"
                       VerticalAlignment="Center"
                       Foreground="{TemplateBinding BorderBrush}"
                       Text="{TemplateBinding Content}"
                       TextWrapping="Wrap"
                       FontFamily="{TemplateBinding FontFamily}"
                       FontSize="{TemplateBinding FontSize}" />
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily"
            Value="Arial" />
    <Setter Property="Foreground"
            Value="{DynamicResource BrushBtnDefaultForeground}" />
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BrushBtnDefaultForegroundShadow}" />
    <Setter Property="FontWeight"
            Value="Normal" />
    <Setter Property="Padding"
            Value="8,5" />
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
  </Style>
  <Style TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">

                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="borderOver"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>

                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="borderDisable"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">

                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="borderChecked"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                      <SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>

                </VisualState>
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border"
                    BorderThickness="0,0,1,1"
                    CornerRadius="3,3,3,3"
                    Background="{DynamicResource BrushBtnDefaultBg}"
                    BorderBrush="{DynamicResource BrushBtnDefaultBorder}" />
            <Border x:Name="borderOver"
                    BorderThickness="0,0,1,1"
                    CornerRadius="3,3,3,3"
                    Background="{DynamicResource BrushBtnDefaultBgOver}"
                    BorderBrush="{DynamicResource BrushBtnDefaultBorderOver}"
                    Opacity="0" />
            <Border x:Name="borderChecked"
                    BorderThickness="0,0,1,1"
                    CornerRadius="3,3,3,3"
                    Background="{DynamicResource BrushBtnDefaultBgChecked}"
                    BorderBrush="{DynamicResource BrushBtnDefaultBorderChecked}"
                    Opacity="0" />
            <Border x:Name="borderDisable"
                    BorderThickness="0,0,1,1"
                    CornerRadius="3,3,3,3"
                    Background="{DynamicResource BrushBtnDefaultBgDisable}"
                    BorderBrush="{DynamicResource BrushBtnDefaultBorderDisable}"
                    Opacity="0" />
            <TextBlock HorizontalAlignment="Center"
                       Margin="0,2,0,0"
                       VerticalAlignment="Center"
                       Foreground="{TemplateBinding BorderBrush}"
                       Text="{TemplateBinding Content}"
                       TextWrapping="Wrap"
                       FontFamily="{TemplateBinding FontFamily}"
                       FontSize="{TemplateBinding FontSize}" />
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FontFamily"
            Value="Arial" />
    <Setter Property="Foreground"
            Value="{DynamicResource BrushBtnDefaultForeground}" />
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BrushBtnDefaultForegroundShadow}" />
    <Setter Property="FontWeight"
            Value="Normal" />
    <Setter Property="Padding"
            Value="8,5" />
  </Style>
  <SolidColorBrush x:Key="*****************TEXT BOX*****************3"
                   Color="#FFFF00F7" />
  <Thickness x:Key="ThicknessTextBox">1,1,1,1</Thickness>
  <CornerRadius x:Key="CornerRadiusTextBox">3</CornerRadius>
  <Thickness x:Key="PaddingTextbox">2</Thickness>

  <Style x:Key="TextBoxStyleInputTweet"
         TargetType="{x:Type TextBox}">
    <Setter Property="Foreground"
            Value="{DynamicResource BrushTextBoxForeground}" />
    <Setter Property="Background"
            Value="{DynamicResource BrushTextBoxBg}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BrushTextBoxBorder}" />
    <Setter Property="FontWeight"
            Value="Normal" />
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="Padding"
            Value="0,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">

          <Border x:Name="Border"
                  Background="{DynamicResource BrushTextBoxBg}"
                  BorderBrush="{DynamicResource BrushTextBoxBorder}"
                  BorderThickness="{DynamicResource ThicknessTextBox}"
                  CornerRadius="{DynamicResource CornerRadiusTextBox}"
                  SnapsToDevicePixels="True"
                  Padding="{DynamicResource PaddingTextbox}">

            <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
            <ScrollViewer x:Name="PART_ContentHost"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Padding="0" />

          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False" />
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused"
                           Value="True" />
                <Condition Property="Tag"
                           Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBorderFocusedNegative}" />
              <Setter Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBgFocusedNegative}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused"
                           Value="False" />
                <Condition Property="Tag"
                           Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter Property="BorderBrush"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBorderFocusedNegative}" />
              <Setter Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBgFocusedNegative}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused"
                           Value="True" />
                <Condition Property="Tag"
                           Value="OK" />
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBgFocused}" />
              <Setter Property="BorderBrush"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBorderFocused}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>


        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TextWrapping"
            Value="Wrap" />

  </Style>

  <Style x:Key="BtnValidText"
         TargetType="Button">
    <Setter Property="Background"
            Value="#FF1F3B53" />
    <Setter Property="Foreground"
            Value="#FF000000" />
    <Setter Property="Padding"
            Value="3" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="BorderBrush">
      <Setter.Value>
        <LinearGradientBrush EndPoint="0.5,1"
                             StartPoint="0.5,0">
          <GradientStop Color="#FFA3AEB9"
                        Offset="0" />
          <GradientStop Color="#FF8399A9"
                        Offset="0.375" />
          <GradientStop Color="#FF718597"
                        Offset="0.375" />
          <GradientStop Color="#FF617584"
                        Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid x:Name="border">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                  Duration="00:00:00.0010000"
                                                  Storyboard.TargetName="border_Copy"
                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <SplineColorKeyFrame KeyTime="00:00:00"
                                           Value="#FF818B9B" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                  Duration="00:00:00.0010000"
                                                  Storyboard.TargetName="border_Copy"
                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                      <SplineColorKeyFrame KeyTime="00:00:00"
                                           Value="#FF444B53" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused" />
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border_Copy"
                    CornerRadius="0,8,8,0"
                    BorderThickness="1,0,0,0"
                    Margin="0,0,1,0">
              <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                  <GradientStop Color="#FF353535"
                                Offset="0" />
                  <GradientStop Color="#FF202020"
                                Offset="1" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                  <GradientStop Color="#FF30353B"
                                Offset="1" />
                  <GradientStop Color="#FF5E6672"
                                Offset="0" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <ContentPresenter x:Name="contentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Margin="3,1,5,1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TextBox}">
    <Setter Property="Foreground"
            Value="{DynamicResource BrushTextBoxForeground}" />
    <Setter Property="Background"
            Value="{DynamicResource BrushTextBoxBg}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BrushTextBoxBorder}" />
    <Setter Property="FontWeight"
            Value="Normal" />
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="Padding"
            Value="0,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border x:Name="Border"
                  Background="{DynamicResource BrushTextBoxBg}"
                  BorderBrush="{DynamicResource BrushTextBoxBorder}"
                  BorderThickness="{DynamicResource ThicknessTextBox}"
                  CornerRadius="{DynamicResource CornerRadiusTextBox}"
                  SnapsToDevicePixels="True"
                  Padding="{DynamicResource PaddingTextbox}">
            <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
            <ScrollViewer x:Name="PART_ContentHost"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Padding="0" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False" />
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBgFocused}" />
              <Setter Property="BorderBrush"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBorderFocused}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type PasswordBox}">

    <Setter Property="Foreground"
            Value="{DynamicResource BrushTextBoxForeground}" />
    <Setter Property="Background"
            Value="{DynamicResource BrushTextBoxBg}" />
    <Setter Property="BorderBrush"
            Value="{DynamicResource BrushTextBoxBorder}" />
    <Setter Property="FontWeight"
            Value="Normal" />
    <Setter Property="FontSize"
            Value="12" />
    <Setter Property="Padding"
            Value="0,0,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <Border x:Name="Border"
                  Background="{DynamicResource BrushTextBoxBg}"
                  BorderBrush="{DynamicResource BrushTextBoxBorder}"
                  BorderThickness="{DynamicResource ThicknessTextBox}"
                  CornerRadius="{DynamicResource CornerRadiusTextBox}"
                  SnapsToDevicePixels="True"
                  Padding="{DynamicResource PaddingTextbox}">
            <!-- The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function -->
            <ScrollViewer x:Name="PART_ContentHost"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          Padding="0" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False" />
            <Trigger Property="IsFocused"
                     Value="True">
              <Setter Property="Background"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBgFocused}" />
              <Setter Property="BorderBrush"
                      TargetName="Border"
                      Value="{DynamicResource BrushTextBoxBorderFocused}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="*****************SCROLLER*****************2"
                   Color="#FFFF00F7" />
  <System:Double x:Key="scrollerWidth">15</System:Double>

  <Style x:Key="ScrollBarButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border CornerRadius="1"
                  VerticalAlignment="Stretch"
                  x:Name="border"
                  HorizontalAlignment="Stretch"
                  Margin="0"
                  Background="{DynamicResource ScrollerBtnBg}">
            <Path Fill="{DynamicResource ScrollerFlecheBg}"
                  Stretch="Fill"
                  Stroke="{x:Null}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Stretch"
                  Width="6"
                  Height="3"
                  Data="M5,-0.31256261 L10,5.0000057 0,5 z"
                  x:Name="path2"
                  RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform Y="-1" />
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Fill"
                      TargetName="path2"
                      Value="{DynamicResource ScrollerFlecheBgOver}" />
              <Setter Property="Background"
                      TargetName="border"
                      Value="{DynamicResource ScrollerBtnBgOver}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
              <Setter Property="Background"
                      TargetName="border"
                      Value="{DynamicResource ScrollerBgClick}" />
              <Setter Property="Fill"
                      TargetName="path2"
                      Value="{DynamicResource ScrollerFlecheBgClick}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalScrollBarPageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}"
                     Width="{TemplateBinding Width}"
                     Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumb"
         TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="#0051554A"
                  Padding="2,0">
            <Border x:Name="border"
                    BorderBrush="{DynamicResource ScrollerBorderExt}"
                    BorderThickness="1"
                    CornerRadius="2">
              <Border x:Name="border_Copy"
                      BorderBrush="{DynamicResource ScrollerBorderInt}"
                      BorderThickness="1"
                      CornerRadius="1"
                      Background="{DynamicResource ScrollerBg}" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="BorderBrush"
                      TargetName="border"
                      Value="{DynamicResource ScrollerBorderExtOver}" />
              <Setter Property="Background"
                      TargetName="border_Copy"
                      Value="{DynamicResource ScrollerBgOver}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarButtonHorizontal"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="{DynamicResource ScrollerBg}"
                  CornerRadius="3,3,3,3"
                  VerticalAlignment="Stretch"
                  x:Name="border"
                  HorizontalAlignment="Stretch">
            <Path x:Name="path"
                  Fill="{DynamicResource ScrollerFlecheBg}"
                  Stretch="Fill"
                  Stroke="{x:Null}"
                  Width="5"
                  Height="8"
                  Data="M6.5,0 L6.4999948,8 1.5,4 z"
                  RenderTransformOrigin="0.5,0.5">
              <Path.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform />
                  <TranslateTransform X="-1" />
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Background"
                      TargetName="border"
                      Value="{DynamicResource ScrollerBgOver}" />
              <Setter Property="Fill"
                      TargetName="path"
                      Value="{DynamicResource ScrollerFlecheBgOver}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
              <Setter Property="Background"
                      TargetName="border"
                      Value="{DynamicResource ScrollerBgClick}" />
              <Setter Property="Fill"
                      TargetName="path"
                      Value="{DynamicResource ScrollerFlecheBgClick}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScrollBarPageButton"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}"
                     Width="{TemplateBinding Width}"
                     Height="{TemplateBinding Height}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled"
            Value="false" />
    <Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
    <Setter Property="Width"
            Value="{DynamicResource scrollerWidth}" />
    <Setter Property="MinWidth"
            Value="{DynamicResource scrollerWidth}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg"
                SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="14" />
              <RowDefinition Height="0.00001*" />
              <RowDefinition MaxHeight="14" />
            </Grid.RowDefinitions>
            <Border BorderBrush="{DynamicResource ScrollerRailBorderExt}"
                    BorderThickness="1,0"
                    Grid.RowSpan="3"
                    Background="{DynamicResource ScrollerRailBg}">
              <Border BorderBrush="{DynamicResource ScrollerRailBorderInt}"
                      BorderThickness="1" />
            </Border>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          Margin="2,2,2,0" />
            <Track x:Name="PART_Track"
                   IsEnabled="{TemplateBinding IsMouseOver}"
                   Grid.Row="1"
                   IsDirectionReversed="true"
                   Margin="0">
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumb}"
                       Margin="0,1" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                              Command="{x:Static ScrollBar.PageDownCommand}" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                              Command="{x:Static ScrollBar.PageUpCommand}" />
              </Track.DecreaseRepeatButton>
            </Track>
            <RepeatButton Style="{StaticResource ScrollBarButton}"
                          IsEnabled="{TemplateBinding IsMouseOver}"
                          Grid.Row="2"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          RenderTransformOrigin="0.5,0.5"
                          Margin="2,0,2,2">
              <RepeatButton.RenderTransform>
                <TransformGroup>
                  <ScaleTransform />
                  <SkewTransform />
                  <RotateTransform Angle="180" />
                  <TranslateTransform />
                </TransformGroup>
              </RepeatButton.RenderTransform>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Background"
                      TargetName="Bg"
                      Value="#F4F4F4" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background"
            Value="{DynamicResource ScrollerRailBg}" />
    <Style.Triggers>
      <Trigger Property="Orientation"
               Value="Horizontal">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg"
                    SnapsToDevicePixels="true"
                    Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="14" />
                  <ColumnDefinition Width="0.00001*" />
                  <ColumnDefinition MaxWidth="14" />
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{DynamicResource ScrollBarButtonHorizontal}"
                              IsEnabled="{TemplateBinding IsMouseOver}"
                              Command="{x:Static ScrollBar.LineLeftCommand}"
                              Margin="0,0.5" />
                <Track x:Name="PART_Track"
                       IsEnabled="{TemplateBinding IsMouseOver}"
                       Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                  Command="{x:Static ScrollBar.PageLeftCommand}" />
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                  Command="{x:Static ScrollBar.PageRightCommand}" />
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0.5,1.5,0.5,1" />
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{DynamicResource ScrollBarButtonHorizontal}"
                              IsEnabled="{TemplateBinding IsMouseOver}"
                              Grid.Column="2"
                              Command="{x:Static ScrollBar.LineRightCommand}"
                              RenderTransformOrigin="0.5,0.5"
                              Margin="0,0.5">
                  <RepeatButton.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform />
                      <SkewTransform />
                      <RotateTransform Angle="180" />
                      <TranslateTransform />
                    </TransformGroup>
                  </RepeatButton.RenderTransform>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="false">
                  <Setter Property="Background"
                          TargetName="Bg"
                          Value="#F4F4F4" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="Height"
                Value="{DynamicResource scrollerWidth}" />
        <Setter Property="MinHeight"
                Value="{DynamicResource scrollerWidth}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="*****************TOOLTIP*****************"
                   Color="#FFFF00F7" />
  <SolidColorBrush x:Key="tooltipForeground"
                   Color="#FFF7F7F7" />
  <SolidColorBrush x:Key="tooltipBorderExt"
                   Color="#E0000000" />
  <LinearGradientBrush x:Key="tooltipBorderInt"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
    <GradientStop Color="#FF1A1A1A"
                  Offset="0.252" />
    <GradientStop Color="#FF6A6A6A"
                  Offset="0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="tooltipBg"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
    <GradientStop Color="#B90A0A0A"
                  Offset="1" />
    <GradientStop Color="#C70C0C0C"
                  Offset="0" />
  </LinearGradientBrush>
  <CornerRadius x:Key="tooltipCornerRadiusExt">3</CornerRadius>
  <CornerRadius x:Key="tooltipCornerRadiusInt">2</CornerRadius>
  <Thickness x:Key="tooltipMargin">3,2</Thickness>
  <Thickness x:Key="tooltipBorderThicknessExt">1</Thickness>
  <Thickness x:Key="tooltipBorderThicknessInt">0</Thickness>
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="Foreground"
            Value="{DynamicResource tooltipForeground}" />
    <Setter Property="FontSize"
            Value="11" />
    <Setter Property="MaxWidth"
            Value="120" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border BorderThickness="{DynamicResource tooltipBorderThicknessExt}"
                  BorderBrush="{DynamicResource tooltipBorderExt}"
                  CornerRadius="{DynamicResource tooltipCornerRadiusExt}">
            <Border BorderBrush="{DynamicResource tooltipBorderInt}"
                    BorderThickness="{DynamicResource tooltipBorderThicknessInt}"
                    CornerRadius="{DynamicResource tooltipCornerRadiusInt}"
                    Background="{DynamicResource tooltipBg}">
              <!--<ContentPresenter Margin="{DynamicResource tooltipMargin}"/>-->
              <TextBlock Margin="{DynamicResource tooltipMargin}"
                         Text="{TemplateBinding Content}"
                         TextWrapping="Wrap" />
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="*****************COMBO BOX*****************2"
                   Color="#FFFF00F7" />

  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="Black"
                     StrokeDashArray="1 2"
                     StrokeThickness="1"
                     Margin="4,4,21,4"
                     SnapsToDevicePixels="true" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxReadonlyToggleButton"
         TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="ClickMode"
            Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Border x:Name="border"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    BorderBrush="{DynamicResource ToggleLevel2Border1}"
                    Background="{DynamicResource ToggleLevel2Bg}"
                    Grid.ColumnSpan="2">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Border x:Name="borderOver"
                    BorderThickness="1"
                    CornerRadius="3,3,3,3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2BorderOver}"
                    Background="{DynamicResource ToggleLevel2BgOver}"
                    Grid.ColumnSpan="2" />
            <Border x:Name="borderChecked"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2Border1Checked}"
                    Background="{DynamicResource ToggleLevel2BgChecked}"
                    Grid.ColumnSpan="2">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2Checked}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Path x:Name="Arrow"
                  Fill="Black"
                  Stretch="Fill"
                  HorizontalAlignment="Center"
                  Margin="3,0"
                  VerticalAlignment="Center"
                  Width="7"
                  Height="10"
                  Grid.Column="2"
                  Data="M0,5.9999999 L6.9999999,5.9999999 3.4999999,10 z M3.4999999,0 L6.9999999,4 0,4 z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Opacity"
                      TargetName="borderOver"
                      Value="1" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
              <Setter Property="Opacity"
                      TargetName="borderChecked"
                      Value="1" />
              <Setter Property="Opacity"
                      TargetName="border"
                      Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxEditableTextBox"
         TargetType="{x:Type TextBox}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="AllowDrop"
            Value="true" />
    <Setter Property="MinWidth"
            Value="0" />
    <Setter Property="MinHeight"
            Value="0" />
    <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton"
         TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle"
            Value="true" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Focusable"
            Value="false" />
    <Setter Property="ClickMode"
            Value="Press" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Border x:Name="border"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    BorderBrush="{DynamicResource ToggleLevel2Border1}"
                    Background="{DynamicResource ToggleLevel2Bg}"
                    Grid.ColumnSpan="2">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Border x:Name="borderOver"
                    BorderThickness="1"
                    CornerRadius="3,3,3,3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2BorderOver}"
                    Background="{DynamicResource ToggleLevel2BgOver}"
                    Grid.ColumnSpan="2" />
            <Border x:Name="borderChecked"
                    BorderThickness="1,1,0,0"
                    CornerRadius="3"
                    Opacity="0"
                    BorderBrush="{DynamicResource ToggleLevel2Border1Checked}"
                    Background="{DynamicResource ToggleLevel2BgChecked}"
                    Grid.ColumnSpan="2">
              <Border BorderBrush="{DynamicResource ToggleLevel2Border2Checked}"
                      BorderThickness="0,0,1,1"
                      CornerRadius="3" />
            </Border>
            <Path x:Name="Arrow"
                  Fill="Black"
                  Stretch="Fill"
                  HorizontalAlignment="Center"
                  Margin="3,0"
                  VerticalAlignment="Center"
                  Width="7"
                  Height="10"
                  Grid.Column="2"
                  Data="M0,5.9999999 L6.9999999,5.9999999 3.4999999,10 z M3.4999999,0 L6.9999999,4 0,4 z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Opacity"
                      TargetName="borderOver"
                      Value="1" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
              <Setter Property="Opacity"
                      TargetName="borderChecked"
                      Value="1" />
              <Setter Property="Opacity"
                      TargetName="border"
                      Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false" />
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate"
                   TargetType="{x:Type ComboBox}">
    <Grid x:Name="Placement"
          SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup"
             AllowsTransparency="true"
             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
             Placement="Bottom"
             Grid.ColumnSpan="2"
             PopupAnimation="Fade">
        <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                         MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                         MinWidth="{Binding ActualWidth, ElementName=Placement}"
                                                         Color="Transparent">
          <Border x:Name="DropDownBorder"
                  Background="#FFF6F6F6"
                  BorderBrush="#FF929292"
                  BorderThickness="1"
                  CornerRadius="3">
            <ScrollViewer CanContentScroll="true">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              KeyboardNavigation.DirectionalNavigation="Contained" />
            </ScrollViewer>
          </Border>
        </Microsoft_Windows_Themes:SystemDropShadowChrome>
      </Popup>
      <Microsoft_Windows_Themes:ListBoxChrome x:Name="Border"
                                              Grid.ColumnSpan="2"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                              RenderMouseOver="{TemplateBinding IsMouseOver}" />
      <TextBox x:Name="PART_EditableTextBox"
               Margin="{TemplateBinding Padding}"
               Style="{StaticResource ComboBoxEditableTextBox}"
               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
      <ToggleButton Style="{StaticResource ComboBoxToggleButton}"
                    Grid.Column="1"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsKeyboardFocusWithin"
               Value="true">
        <Setter Property="Foreground"
                Value="Black" />
      </Trigger>
      <Trigger Property="IsDropDownOpen"
               Value="true">
        <Setter Property="RenderFocused"
                TargetName="Border"
                Value="true" />
      </Trigger>
      <Trigger Property="HasItems"
               Value="false">
        <Setter Property="Height"
                TargetName="DropDownBorder"
                Value="95" />
      </Trigger>
      <Trigger Property="IsEnabled"
               Value="false">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
        <Setter Property="Background"
                Value="#FFF4F4F4" />
      </Trigger>
      <Trigger Property="IsGrouping"
               Value="true">
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
      </Trigger>
      <Trigger Property="HasDropShadow"
               SourceName="PART_Popup"
               Value="true">
        <Setter Property="Margin"
                TargetName="Shdw"
                Value="0,0,5,5" />
        <Setter Property="Color"
                TargetName="Shdw"
                Value="#71000000" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="FocusVisualStyle"
            Value="{StaticResource ComboBoxFocusVisual}" />
    <Setter Property="IsTabStop"
            Value="false" />
    <Setter Property="Padding"
            Value="3" />
    <Setter Property="Template"
            Value="{StaticResource ComboBoxEditableTemplate}" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
    <Setter Property="Padding"
            Value="4,3" />
    <Setter Property="Foreground"
            Value="{DynamicResource BrushBtnDefaultForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid"
                SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   Grid.ColumnSpan="2"
                   PopupAnimation="Fade">
              <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                               MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                                               Color="Transparent">
                <Border x:Name="DropDownBorder"
                        Background="#FFF6F6F6"
                        BorderBrush="#FF929292"
                        BorderThickness="1"
                        CornerRadius="3">
                  <ScrollViewer CanContentScroll="true">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Border>
              </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
              <Setter Property="Margin"
                      TargetName="Shdw"
                      Value="0,0,5,5" />
              <Setter Property="Color"
                      TargetName="Shdw"
                      Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
              <Setter Property="Height"
                      TargetName="DropDownBorder"
                      Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
              <Setter Property="Background"
                      Value="#FFF4F4F4" />
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="true">
              <Setter Property="ScrollViewer.CanContentScroll"
                      Value="false" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment"
            Value="Center" />

    <Style.Triggers>
      <Trigger Property="IsEditable"
               Value="true">
        <Setter Property="BorderBrush">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0,20"
                                 StartPoint="0,0"
                                 MappingMode="Absolute">
              <GradientStop Color="#ABADB3"
                            Offset="0.05" />
              <GradientStop Color="#E2E3EA"
                            Offset="0.07" />
              <GradientStop Color="#E3E9EF"
                            Offset="1" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxEditableTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding"
            Value="3,0,3,0" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border x:Name="Bd"
                  SnapsToDevicePixels="True"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  Margin="0,2">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              Margin="0"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
                     Value="True">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
              <Setter Property="Background"
                      Value="#FF4F97EC"
                      TargetName="Bd" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>