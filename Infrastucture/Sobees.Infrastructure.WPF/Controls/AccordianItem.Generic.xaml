<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Controls="clr-namespace:Sobees.Infrastructure.Controls" mc:Ignorable="d">

     
	 <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="AccordianItem.HeaderButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="#FF1F3B53" />
                <Setter Property="Foreground"
                        Value="{DynamicResource Level4BrushIcon}" />
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9"
                                          Offset="0" />
                            <GradientStop Color="#FF8399A9"
                                          Offset="0.375" />
                            <GradientStop Color="#FF718597"
                                          Offset="0.375" />
                            <GradientStop Color="#FF617584"
                                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="00:00:00.1000000"
                                                              To="MouseOver" />
                                            <VisualTransition From="MouseOver"
                                                              GeneratedDuration="00:00:00.1000000" />
                                            <VisualTransition GeneratedDuration="00:00:00.1000000"
                                                              To="Disabled" />
                                            <VisualTransition From="Disabled"
                                                              GeneratedDuration="00:00:00.1000000" />
                                            <VisualTransition GeneratedDuration="00:00:00.1000000"
                                                              To="Pressed" />
                                            <VisualTransition From="Pressed"
                                                              GeneratedDuration="00:00:00.1000000" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                        	<Storyboard>
                                        		<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="mouseOver" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        			<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        		</DoubleAnimationUsingKeyFrames>
                                        	</Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                	<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                	<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1" KeySpline="0.4,0.41,0.21,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                	<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" KeySpline="0.4,0.41,0.21,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            	<Control x:Name="selected" Style="{DynamicResource ControlStyleBtnSelected}" Width="Auto" Height="Auto" Opacity="0"/>
                            	<Control x:Name="mouseOver" Style="{DynamicResource ControlStyleBtnOver}" Opacity="0"/>
                            	<Path x:Name="path" Fill="#FFB0BDC5" Stretch="Fill" Width="7" Height="3" Data="M0.5,6.125 L19.5,6.125 10.25,19.5 z" VerticalAlignment="Bottom" HorizontalAlignment="Center" d:LayoutOverrides="VerticalAlignment" Opacity="0" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,3">
                            		<Path.RenderTransform>
                            			<TransformGroup>
                            				<ScaleTransform/>
                            				<SkewTransform/>
                            				<RotateTransform/>
                            				<TranslateTransform Y="-12"/>
                            			</TransformGroup>
                            		</Path.RenderTransform>
                            	</Path>
                            	<ContentPresenter x:Name="contentPresenter"
                            		HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            		Margin="{TemplateBinding Padding}"
                            		VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            		Content="{TemplateBinding Content}"
                            		ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource DoubleColumnLeftHeight}"/>
            </Style>
			
    <!--<Style x:Key="AccordianItem.HeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" SnapsToDevicePixels="true" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2,2,2,2" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type Controls:AccordianItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:AccordianItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnExpanded">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                           Storyboard.TargetName="ContentHostHeightTransform" 
                                                           Storyboard.TargetProperty="ScaleY">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.14" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        	<BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                        		<DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                        	</BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnCollapsed">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="ContentHostHeightTransform" 
                                                           Storyboard.TargetProperty="ScaleY">
                            	<SplineDoubleKeyFrame KeyTime="00:00:00.14" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        	<BooleanAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="button" Storyboard.TargetProperty="(UIElement.IsEnabled)">
                        		<DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
                        	</BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                        	<Button x:Name="button" DockPanel.Dock="Top"
                        		Content="{TemplateBinding Header}"
                        		ContentTemplate="{TemplateBinding HeaderTemplate}"
                        		ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        		Command="{Binding Source={x:Static Controls:AccordianItem.ExpandCommand}}"
                        		Style="{StaticResource AccordianItem.HeaderButtonStyle}" Panel.ZIndex="1" BorderThickness="1,1,1,0"/>
                            <ContentPresenter x:Name="ContentHost" DockPanel.Dock="Top"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              >
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform x:Name="ContentHostHeightTransform" ScaleY="0.0"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnExpanded}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnCollapsed}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>